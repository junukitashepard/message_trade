names(cdf)[names(cdf) == paste0('M_', c)] <- 'm'
names(cdf)[names(cdf) == paste0('D_', c)] <- 'd'
cdf$v <- cdf$d - cdf$x + cdf$m # amount available
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lv = lead(v))
cdf$value <- (cdf$lv-cdf$v)/cdf$v
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lgv = lag(value))
cdf$value[is.na(cdf$value)] <- cdf$lgv[is.na(cdf$value)]
cdf$technology <- paste0(c, '_ppl')
cdf <- cdf[c('node', 'year', 'technology', 'value')]
gup.df <- rbind(as.data.frame(gup.df), as.data.frame(cdf))
}
# Set up in parameter format
View(gup.df)
#######################################
# Toy model: pre-process imports data #
#######################################
rm(list = ls())
wd <- "H:/message_trade/analysis/1_toy_scenario/"
setwd(wd)
library('plyr')
library('dplyr')
library('magrittr')
input <-    paste0(wd, "data/")
output <-   paste0(wd, "output/")
temp <-     paste0(wd, "temp/")
# Import file
assign('df', read.csv(file.path(input, "imports_production.csv"), stringsAsFactors = F))
names(df) <- c('node_origin', 'node_dest', 'year',
'tra_coal', 'tra_gas', 'tra_oil', 'tra_bio',
'domp_coal', 'domp_gas', 'domp_oil', 'domp_bio')
# Separate to exports and imports
for (t in c('X', 'M')) {
if (t == 'X') {nn = 'node_origin'}
if (t == 'M') {nn = 'node_dest'}
assign('t.df', df)
names(t.df)[names(t.df) == nn] <- 'tn'
t.df <- dplyr::group_by(t.df, tn, year) %>%
dplyr::summarise(tra_coal = sum(tra_coal, na.rm = T),
tra_gas = sum(tra_gas, na.rm = T),
tra_oil = sum(tra_oil, na.rm = T),
tra_bio = sum(tra_bio, na.rm = T))
names(t.df) <- c('node', 'year', paste0(t, '_coal'), paste0(t, '_gas'), paste0(t, '_oil'), paste0(t, '_bio'))
assign(paste0('df.', t), t.df, envir = parent.frame())
}
# Separate domestic production (domp is for node_origin)
assign('df.D', df)
df.D <- dplyr::group_by(df.D, node_origin, year) %>%
dplyr::summarise(domp_coal = sum(domp_coal, na.rm = T),
domp_gas = sum(domp_gas, na.rm = T),
domp_oil = sum(domp_oil, na.rm = T),
domp_bio = sum(domp_bio, na.rm = T))
names(df.D) <- c('node', 'year', 'D_coal', 'D_gas', 'D_oil', 'D_bio')
# Recombine exports and imports
df <- inner_join(df.X, df.M, by = c('node', 'year'))
df <- inner_join(df, df.D, by = c('node', 'year'))
# Assign annual growth upper bound
gup.df <- data.frame(node = character(0),
year = numeric(0),
technology = character(0),
value = numeric(0))
for (c in c('coal', 'gas', 'oil', 'bio')) {
assign('cdf', df)
names(cdf)[names(cdf) == paste0('X_', c)] <- 'x'
names(cdf)[names(cdf) == paste0('M_', c)] <- 'm'
names(cdf)[names(cdf) == paste0('D_', c)] <- 'd'
cdf$v <- cdf$d - cdf$x + cdf$m # amount available
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lv = lag(v))
cdf$value <- (cdf$v-cdf$lv)/cdf$lv
cdf <- subset(cdf, !is.na(value))
cdf$technology <- paste0(c, '_ppl')
cdf <- cdf[c('node', 'year', 'technology', 'value')]
gup.df <- rbind(as.data.frame(gup.df), as.data.frame(cdf))
}
# Set up in parameter format
gup.df$time <- 'year'
gup.df$unit <- '%'
#######################################
# Toy model: pre-process imports data #
#######################################
rm(list = ls())
wd <- "H:/message_trade/analysis/1_toy_scenario/"
setwd(wd)
library('plyr')
library('dplyr')
library('magrittr')
input <-    paste0(wd, "data/")
output <-   paste0(wd, "output/")
temp <-     paste0(wd, "temp/")
# Import file
assign('df', read.csv(file.path(input, "imports_production.csv"), stringsAsFactors = F))
names(df) <- c('node_origin', 'node_dest', 'year',
'tra_coal', 'tra_gas', 'tra_oil', 'tra_bio',
'domp_coal', 'domp_gas', 'domp_oil', 'domp_bio')
# Separate to exports and imports
for (t in c('X', 'M')) {
if (t == 'X') {nn = 'node_origin'}
if (t == 'M') {nn = 'node_dest'}
assign('t.df', df)
names(t.df)[names(t.df) == nn] <- 'tn'
t.df <- dplyr::group_by(t.df, tn, year) %>%
dplyr::summarise(tra_coal = sum(tra_coal, na.rm = T),
tra_gas = sum(tra_gas, na.rm = T),
tra_oil = sum(tra_oil, na.rm = T),
tra_bio = sum(tra_bio, na.rm = T))
names(t.df) <- c('node', 'year', paste0(t, '_coal'), paste0(t, '_gas'), paste0(t, '_oil'), paste0(t, '_bio'))
assign(paste0('df.', t), t.df, envir = parent.frame())
}
# Separate domestic production (domp is for node_origin)
assign('df.D', df)
df.D <- dplyr::group_by(df.D, node_origin, year) %>%
dplyr::summarise(domp_coal = sum(domp_coal, na.rm = T),
domp_gas = sum(domp_gas, na.rm = T),
domp_oil = sum(domp_oil, na.rm = T),
domp_bio = sum(domp_bio, na.rm = T))
names(df.D) <- c('node', 'year', 'D_coal', 'D_gas', 'D_oil', 'D_bio')
# Recombine exports and imports
df <- inner_join(df.X, df.M, by = c('node', 'year'))
df <- inner_join(df, df.D, by = c('node', 'year'))
# Assign annual growth upper bound
gup.df <- data.frame(node = character(0),
year = numeric(0),
technology = character(0),
value = numeric(0))
for (c in c('coal', 'gas', 'oil', 'bio')) {
assign('cdf', df)
names(cdf)[names(cdf) == paste0('X_', c)] <- 'x'
names(cdf)[names(cdf) == paste0('M_', c)] <- 'm'
names(cdf)[names(cdf) == paste0('D_', c)] <- 'd'
cdf$v <- cdf$d - cdf$x + cdf$m # amount available
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lv = lag(v))
cdf$value <- (cdf$v-cdf$lv)/cdf$lv
cdf <- subset(cdf, !is.na(value))
cdf$technology <- paste0(c, '_ppl')
cdf <- cdf[c('node', 'year', 'technology', 'value')]
gup.df <- rbind(as.data.frame(gup.df), as.data.frame(cdf))
}
# Set up other growth technology to default values
base.df <- unique(gupdf.df[c('node', 'year')])
other_technologies <- c('hydro_ppl', 'wind_ppl', 'solar_pv_ppl', 'cfl', 'bulb')
for (c in other_technologies) {
assign('oth.df', base.df)
oth.df$technology <- c
oth.df$value <- 0.05
assign(gup.df, rbind(as.data.frame(gup.df), as.data.frame(oth.df)), envir = parent.frame())
}
#######################################
# Toy model: pre-process imports data #
#######################################
rm(list = ls())
wd <- "H:/message_trade/analysis/1_toy_scenario/"
setwd(wd)
library('plyr')
library('dplyr')
library('magrittr')
input <-    paste0(wd, "data/")
output <-   paste0(wd, "output/")
temp <-     paste0(wd, "temp/")
# Import file
assign('df', read.csv(file.path(input, "imports_production.csv"), stringsAsFactors = F))
names(df) <- c('node_origin', 'node_dest', 'year',
'tra_coal', 'tra_gas', 'tra_oil', 'tra_bio',
'domp_coal', 'domp_gas', 'domp_oil', 'domp_bio')
# Separate to exports and imports
for (t in c('X', 'M')) {
if (t == 'X') {nn = 'node_origin'}
if (t == 'M') {nn = 'node_dest'}
assign('t.df', df)
names(t.df)[names(t.df) == nn] <- 'tn'
t.df <- dplyr::group_by(t.df, tn, year) %>%
dplyr::summarise(tra_coal = sum(tra_coal, na.rm = T),
tra_gas = sum(tra_gas, na.rm = T),
tra_oil = sum(tra_oil, na.rm = T),
tra_bio = sum(tra_bio, na.rm = T))
names(t.df) <- c('node', 'year', paste0(t, '_coal'), paste0(t, '_gas'), paste0(t, '_oil'), paste0(t, '_bio'))
assign(paste0('df.', t), t.df, envir = parent.frame())
}
# Separate domestic production (domp is for node_origin)
assign('df.D', df)
df.D <- dplyr::group_by(df.D, node_origin, year) %>%
dplyr::summarise(domp_coal = sum(domp_coal, na.rm = T),
domp_gas = sum(domp_gas, na.rm = T),
domp_oil = sum(domp_oil, na.rm = T),
domp_bio = sum(domp_bio, na.rm = T))
names(df.D) <- c('node', 'year', 'D_coal', 'D_gas', 'D_oil', 'D_bio')
# Recombine exports and imports
df <- inner_join(df.X, df.M, by = c('node', 'year'))
df <- inner_join(df, df.D, by = c('node', 'year'))
# Assign annual growth upper bound
gup.df <- data.frame(node = character(0),
year = numeric(0),
technology = character(0),
value = numeric(0))
for (c in c('coal', 'gas', 'oil', 'bio')) {
assign('cdf', df)
names(cdf)[names(cdf) == paste0('X_', c)] <- 'x'
names(cdf)[names(cdf) == paste0('M_', c)] <- 'm'
names(cdf)[names(cdf) == paste0('D_', c)] <- 'd'
cdf$v <- cdf$d - cdf$x + cdf$m # amount available
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lv = lag(v))
cdf$value <- (cdf$v-cdf$lv)/cdf$lv
cdf <- subset(cdf, !is.na(value))
cdf$technology <- paste0(c, '_ppl')
cdf <- cdf[c('node', 'year', 'technology', 'value')]
gup.df <- rbind(as.data.frame(gup.df), as.data.frame(cdf))
}
# Set up other growth technology to default values
base.df <- unique(gup.df[c('node', 'year')])
other_technologies <- c('hydro_ppl', 'wind_ppl', 'solar_pv_ppl', 'cfl', 'bulb')
for (c in other_technologies) {
assign('oth.df', base.df)
oth.df$technology <- c
oth.df$value <- 0.05
assign(gup.df, rbind(as.data.frame(gup.df), as.data.frame(oth.df)), envir = parent.frame())
}
#######################################
# Toy model: pre-process imports data #
#######################################
rm(list = ls())
wd <- "H:/message_trade/analysis/1_toy_scenario/"
setwd(wd)
library('plyr')
library('dplyr')
library('magrittr')
input <-    paste0(wd, "data/")
output <-   paste0(wd, "output/")
temp <-     paste0(wd, "temp/")
# Import file
assign('df', read.csv(file.path(input, "imports_production.csv"), stringsAsFactors = F))
names(df) <- c('node_origin', 'node_dest', 'year',
'tra_coal', 'tra_gas', 'tra_oil', 'tra_bio',
'domp_coal', 'domp_gas', 'domp_oil', 'domp_bio')
# Separate to exports and imports
for (t in c('X', 'M')) {
if (t == 'X') {nn = 'node_origin'}
if (t == 'M') {nn = 'node_dest'}
assign('t.df', df)
names(t.df)[names(t.df) == nn] <- 'tn'
t.df <- dplyr::group_by(t.df, tn, year) %>%
dplyr::summarise(tra_coal = sum(tra_coal, na.rm = T),
tra_gas = sum(tra_gas, na.rm = T),
tra_oil = sum(tra_oil, na.rm = T),
tra_bio = sum(tra_bio, na.rm = T))
names(t.df) <- c('node', 'year', paste0(t, '_coal'), paste0(t, '_gas'), paste0(t, '_oil'), paste0(t, '_bio'))
assign(paste0('df.', t), t.df, envir = parent.frame())
}
# Separate domestic production (domp is for node_origin)
assign('df.D', df)
df.D <- dplyr::group_by(df.D, node_origin, year) %>%
dplyr::summarise(domp_coal = sum(domp_coal, na.rm = T),
domp_gas = sum(domp_gas, na.rm = T),
domp_oil = sum(domp_oil, na.rm = T),
domp_bio = sum(domp_bio, na.rm = T))
names(df.D) <- c('node', 'year', 'D_coal', 'D_gas', 'D_oil', 'D_bio')
# Recombine exports and imports
df <- inner_join(df.X, df.M, by = c('node', 'year'))
df <- inner_join(df, df.D, by = c('node', 'year'))
# Assign annual growth upper bound
gup.df <- data.frame(node = character(0),
year = numeric(0),
technology = character(0),
value = numeric(0))
for (c in c('coal', 'gas', 'oil', 'bio')) {
assign('cdf', df)
names(cdf)[names(cdf) == paste0('X_', c)] <- 'x'
names(cdf)[names(cdf) == paste0('M_', c)] <- 'm'
names(cdf)[names(cdf) == paste0('D_', c)] <- 'd'
cdf$v <- cdf$d - cdf$x + cdf$m # amount available
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lv = lag(v))
cdf$value <- (cdf$v-cdf$lv)/cdf$lv
cdf <- subset(cdf, !is.na(value))
cdf$technology <- paste0(c, '_ppl')
cdf <- cdf[c('node', 'year', 'technology', 'value')]
gup.df <- rbind(as.data.frame(gup.df), as.data.frame(cdf))
}
# Set up other growth technology to default values
base.df <- unique(gup.df[c('node', 'year')])
other_technologies <- c('hydro_ppl', 'wind_ppl', 'solar_pv_ppl', 'cfl', 'bulb')
for (c in other_technologies) {
assign('oth.df', base.df)
oth.df$technology <- c
oth.df$value <- 0.05
assign('gup.df', rbind(as.data.frame(gup.df), as.data.frame(oth.df)), envir = parent.frame())
}
View(gup.df)
#######################################
# Toy model: pre-process imports data #
#######################################
rm(list = ls())
wd <- "H:/message_trade/analysis/1_toy_scenario/"
setwd(wd)
library('plyr')
library('dplyr')
library('magrittr')
input <-    paste0(wd, "data/")
output <-   paste0(wd, "data/")
# Import file
assign('df', read.csv(file.path(input, "imports_production.csv"), stringsAsFactors = F))
names(df) <- c('node_origin', 'node_dest', 'year',
'tra_coal', 'tra_gas', 'tra_oil', 'tra_bio',
'domp_coal', 'domp_gas', 'domp_oil', 'domp_bio')
# Separate to exports and imports
for (t in c('X', 'M')) {
if (t == 'X') {nn = 'node_origin'}
if (t == 'M') {nn = 'node_dest'}
assign('t.df', df)
names(t.df)[names(t.df) == nn] <- 'tn'
t.df <- dplyr::group_by(t.df, tn, year) %>%
dplyr::summarise(tra_coal = sum(tra_coal, na.rm = T),
tra_gas = sum(tra_gas, na.rm = T),
tra_oil = sum(tra_oil, na.rm = T),
tra_bio = sum(tra_bio, na.rm = T))
names(t.df) <- c('node', 'year', paste0(t, '_coal'), paste0(t, '_gas'), paste0(t, '_oil'), paste0(t, '_bio'))
assign(paste0('df.', t), t.df, envir = parent.frame())
}
# Separate domestic production (domp is for node_origin)
assign('df.D', df)
df.D <- dplyr::group_by(df.D, node_origin, year) %>%
dplyr::summarise(domp_coal = sum(domp_coal, na.rm = T),
domp_gas = sum(domp_gas, na.rm = T),
domp_oil = sum(domp_oil, na.rm = T),
domp_bio = sum(domp_bio, na.rm = T))
names(df.D) <- c('node', 'year', 'D_coal', 'D_gas', 'D_oil', 'D_bio')
# Recombine exports and imports
df <- inner_join(df.X, df.M, by = c('node', 'year'))
df <- inner_join(df, df.D, by = c('node', 'year'))
# Assign annual growth upper bound
gup.df <- data.frame(node = character(0),
year = numeric(0),
technology = character(0),
value = numeric(0))
for (c in c('coal', 'gas', 'oil', 'bio')) {
assign('cdf', df)
names(cdf)[names(cdf) == paste0('X_', c)] <- 'x'
names(cdf)[names(cdf) == paste0('M_', c)] <- 'm'
names(cdf)[names(cdf) == paste0('D_', c)] <- 'd'
cdf$v <- cdf$d - cdf$x + cdf$m # amount available
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lv = lag(v))
cdf$value <- (cdf$v-cdf$lv)/cdf$lv
cdf <- subset(cdf, !is.na(value))
cdf$technology <- paste0(c, '_ppl')
cdf <- cdf[c('node', 'year', 'technology', 'value')]
gup.df <- rbind(as.data.frame(gup.df), as.data.frame(cdf))
}
# Set up other growth technology to default values
base.df <- unique(gup.df[c('node', 'year')])
other_technologies <- c('hydro_ppl', 'wind_ppl', 'solar_pv_ppl', 'cfl', 'bulb')
for (c in other_technologies) {
assign('oth.df', base.df)
oth.df$technology <- c
oth.df$value <- 0.05
assign('gup.df', rbind(as.data.frame(gup.df), as.data.frame(oth.df)), envir = parent.frame())
}
gup.df$time <- 'year'
gup.df$unit <- '%'
write.csv(gup.df, file.path(output, 'growth_activities.csv'))
#######################################
# Toy model: pre-process imports data #
#######################################
rm(list = ls())
wd <- "H:/message_trade/analysis/1_toy_scenario/"
setwd(wd)
library('plyr')
library('dplyr')
library('magrittr')
input <-    paste0(wd, "data/")
output <-   paste0(wd, "data/")
default.growth <- 0.05
# Import file
assign('df', read.csv(file.path(input, "imports_production.csv"), stringsAsFactors = F))
names(df) <- c('node_origin', 'node_dest', 'year',
'tra_coal', 'tra_gas', 'tra_oil', 'tra_bio',
'domp_coal', 'domp_gas', 'domp_oil', 'domp_bio')
# Separate to exports and imports
for (t in c('X', 'M')) {
if (t == 'X') {nn = 'node_origin'}
if (t == 'M') {nn = 'node_dest'}
assign('t.df', df)
names(t.df)[names(t.df) == nn] <- 'tn'
t.df <- dplyr::group_by(t.df, tn, year) %>%
dplyr::summarise(tra_coal = sum(tra_coal, na.rm = T),
tra_gas = sum(tra_gas, na.rm = T),
tra_oil = sum(tra_oil, na.rm = T),
tra_bio = sum(tra_bio, na.rm = T))
names(t.df) <- c('node', 'year', paste0(t, '_coal'), paste0(t, '_gas'), paste0(t, '_oil'), paste0(t, '_bio'))
assign(paste0('df.', t), t.df, envir = parent.frame())
}
# Separate domestic production (domp is for node_origin)
assign('df.D', df)
df.D <- dplyr::group_by(df.D, node_origin, year) %>%
dplyr::summarise(domp_coal = sum(domp_coal, na.rm = T),
domp_gas = sum(domp_gas, na.rm = T),
domp_oil = sum(domp_oil, na.rm = T),
domp_bio = sum(domp_bio, na.rm = T))
names(df.D) <- c('node', 'year', 'D_coal', 'D_gas', 'D_oil', 'D_bio')
# Recombine exports and imports
df <- inner_join(df.X, df.M, by = c('node', 'year'))
df <- inner_join(df, df.D, by = c('node', 'year'))
# Assign annual growth upper bound
gup.df <- data.frame(node = character(0),
year = numeric(0),
technology = character(0),
value = numeric(0))
for (c in c('coal', 'gas', 'oil', 'bio')) {
assign('cdf', df)
names(cdf)[names(cdf) == paste0('X_', c)] <- 'x'
names(cdf)[names(cdf) == paste0('M_', c)] <- 'm'
names(cdf)[names(cdf) == paste0('D_', c)] <- 'd'
cdf$v <- cdf$d - cdf$x + cdf$m # amount available
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lv = lag(v))
cdf$value <- (cdf$v-cdf$lv)/cdf$lv
cdf$value <- cdf$value * default.growth
cdf <- subset(cdf, !is.na(value))
cdf$technology <- paste0(c, '_ppl')
cdf <- cdf[c('node', 'year', 'technology', 'value')]
gup.df <- rbind(as.data.frame(gup.df), as.data.frame(cdf))
}
# Set up other growth technology to default values
base.df <- unique(gup.df[c('node', 'year')])
other_technologies <- c('hydro_ppl', 'wind_ppl', 'solar_pv_ppl', 'cfl', 'bulb')
for (c in other_technologies) {
assign('oth.df', base.df)
oth.df$technology <- c
oth.df$value <- default.growth
assign('gup.df', rbind(as.data.frame(gup.df), as.data.frame(oth.df)), envir = parent.frame())
}
gup.df$time <- 'year'
gup.df$unit <- '%'
write.csv(gup.df, file.path(output, 'growth_activities.csv'))
#######################################
# Toy model: pre-process imports data #
#######################################
rm(list = ls())
wd <- "H:/message_trade/analysis/1_toy_scenario/"
setwd(wd)
library('plyr')
library('dplyr')
library('magrittr')
input <-    paste0(wd, "data/")
output <-   paste0(wd, "data/")
default.growth <- 0.05
# Import file
assign('df', read.csv(file.path(input, "imports_production.csv"), stringsAsFactors = F))
names(df) <- c('node_origin', 'node_dest', 'year',
'tra_coal', 'tra_gas', 'tra_oil', 'tra_bio',
'domp_coal', 'domp_gas', 'domp_oil', 'domp_bio')
# Separate to exports and imports
for (t in c('X', 'M')) {
if (t == 'X') {nn = 'node_origin'}
if (t == 'M') {nn = 'node_dest'}
assign('t.df', df)
names(t.df)[names(t.df) == nn] <- 'tn'
t.df <- dplyr::group_by(t.df, tn, year) %>%
dplyr::summarise(tra_coal = sum(tra_coal, na.rm = T),
tra_gas = sum(tra_gas, na.rm = T),
tra_oil = sum(tra_oil, na.rm = T),
tra_bio = sum(tra_bio, na.rm = T))
names(t.df) <- c('node', 'year', paste0(t, '_coal'), paste0(t, '_gas'), paste0(t, '_oil'), paste0(t, '_bio'))
assign(paste0('df.', t), t.df, envir = parent.frame())
}
# Separate domestic production (domp is for node_origin)
assign('df.D', df)
df.D <- dplyr::group_by(df.D, node_origin, year) %>%
dplyr::summarise(domp_coal = sum(domp_coal, na.rm = T),
domp_gas = sum(domp_gas, na.rm = T),
domp_oil = sum(domp_oil, na.rm = T),
domp_bio = sum(domp_bio, na.rm = T))
names(df.D) <- c('node', 'year', 'D_coal', 'D_gas', 'D_oil', 'D_bio')
# Recombine exports and imports
df <- inner_join(df.X, df.M, by = c('node', 'year'))
df <- inner_join(df, df.D, by = c('node', 'year'))
# Assign annual growth upper bound
gup.df <- data.frame(node = character(0),
year = numeric(0),
technology = character(0),
value = numeric(0))
for (c in c('coal', 'gas', 'oil', 'bio')) {
assign('cdf', df)
names(cdf)[names(cdf) == paste0('X_', c)] <- 'x'
names(cdf)[names(cdf) == paste0('M_', c)] <- 'm'
names(cdf)[names(cdf) == paste0('D_', c)] <- 'd'
cdf$v <- cdf$d - cdf$x + cdf$m # amount available
cdf <- dplyr::group_by(cdf, node) %>%
dplyr::mutate(lv = lag(v))
cdf$value <- (cdf$v-cdf$lv)/cdf$lv
cdf$value <- cdf$value * default.growth
cdf <- subset(cdf, !is.na(value))
cdf$technology <- paste0(c, '_ppl')
cdf <- cdf[c('node', 'year', 'technology', 'value')]
gup.df <- rbind(as.data.frame(gup.df), as.data.frame(cdf))
}
# Set up other growth technology to default values
base.df <- unique(gup.df[c('node', 'year')])
other_technologies <- c('hydro_ppl', 'wind_ppl', 'solar_pv_ppl', 'cfl', 'bulb')
for (c in other_technologies) {
assign('oth.df', base.df)
oth.df$technology <- c
oth.df$value <- default.growth
assign('gup.df', rbind(as.data.frame(gup.df), as.data.frame(oth.df)), envir = parent.frame())
}
# Format parameter
names(gup.df) <- c('node_loc', 'year_act', 'technology', 'value')
gup.df$time <- 'year'
gup.df$unit <- '%'
write.csv(gup.df, file.path(output, 'growth_activities.csv'))
